[tox]
envlist = tests
skipsdist = true
minversion = 3.8.0
requires =
  tox-pip-extensions
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[pycodestyle]
ignore =
    # Disable pycodestyle errors and warnings that we don't care about because
    # Black formats our code for us.
    E203,  # Whitespace before ':',
    E231,  # Missing whitespace after ',',
    E501,  # Line too long,
    W503,  # Line break before binary operator,

    # Bare except. PyLint finds these for us so we don't need pycodestyle to.
    E722,

[pydocstyle]
ignore =
    # Missing docstrings.
    D100,D101,D102,D103,D104,D105,D106,D107,

    # "No blank lines allowed after function docstring" conflicts with
    # the Black code formatter, which insists on inserting blank lines after
    # function docstrings.
    D202,

    # "1 blank line required before class docstring" conflicts with another
    # pydocstyle rule D211 "No blank lines allowed before class docstring".
    D203,

    # Multi-line docstring summary should start at the first line, this
    # conflicts with another pycodestyle rule "Multi-line docstring summary
    # should start at the second line".
    D212,

[testenv]
skip_install = true
passenv =
    HOME
    {tests,functests,bddtests}: TEST_DATABASE_URL
    {tests,functests}: PYTEST_ADDOPTS
    dev: SESSION_COOKIE_SECRET
    dev: DATABASE_URL
    dev: DEBUG
    dev: FEATURE_FLAG_*
    dev: FEATURE_FLAGS_ALLOWED_IN_COOKIE
    dev: FEATURE_FLAGS_COOKIE_SECRET
    dev: GOOGLE_APP_ID
    dev: GOOGLE_CLIENT_ID
    dev: GOOGLE_DEVELOPER_KEY
    dev: H_AUTHORITY
    dev: H_API_URL_PRIVATE
    dev: H_API_URL_PUBLIC
    dev: H_CLIENT_ID
    dev: H_CLIENT_SECRET
    dev: H_JWT_CLIENT_ID
    dev: H_JWT_CLIENT_SECRET
    dev: HASHED_PW
    dev: JWT_SECRET
    dev: LMS_SECRET
    dev: OAUTH2_STATE_SECRET
    dev: RPC_ALLOWED_ORIGINS
    dev: SALT
    dev: SENTRY_DSN
    dev: SENTRY_ENVIRONMENT
    dev: USERNAME
    dev: VIA_URL
deps =
    {tests,clean}: coverage
    {tests,bddtests,functests,lint,pylint}: httpretty
    {tests,bddtests,functests,lint,pylint,docstrings,checkdocstrings}: pytest
    {tests,functests,lint,pylint,docstrings,checkdocstrings}: factory-boy
    {tests,bddtests,functests,lint,pylint,docstrings,checkdocstrings}: h-matchers>=1.2.0
    {bddtests,functests,lint,pylint,docstrings,checkdocstrings}: webtest
    {bddtests,lint,pylint}: behave
    lint: prospector==1.1.6.2
    pylint: pylint
    pylint: pydocstyle
    pylint: pycodestyle
    {format,checkformatting}: black
    {format,checkformatting}: isort
    {docstrings,checkdocstrings}: sphinx
    docstrings: sphinx-autobuild
    docker-compose: docker-compose
    {tests,bddtests,functests,lint,pylint,docstrings,checkdocstrings}: -r requirements.txt
    dev: -r requirements-dev.in
    pip-compile: pip-tools
setenv =
    tests: JWT_SECRET = test_secret
    tests: VIA_URL = https://example.com/
    tests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_test}
    functests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_functests}
    bddtests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_bddtests}
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
whitelist_externals =
    tests,functests,bddtests: sh
commands =
    dev: {posargs:pserve conf/development.ini --reload}
    tests: sh bin/create-db lms_test
    functests: sh bin/create-db lms_functests
    bddtests: sh bin/create-db lms_bddtests
    tests: coverage run -m pytest -v -Werror {posargs:tests/unit/}
    tests: -coverage combine
    tests: coverage report
    functests: pytest {posargs:tests/functional/}
    bddtests: behave {posargs:tests/bdd/}
    lint: prospector
    lint: prospector tests
    pylint: pylint --rcfile=pylintrc.code lms
    pylint: pylint --rcfile=pylintrc.tests tests
    pylint: pydocstyle lms tests
    pylint: pycodestyle lms tests
    format: black lms tests
    format: isort --recursive --quiet --atomic lms tests
    checkformatting: black --check lms tests
    checkformatting: isort --recursive --quiet --check-only lms tests
    docker-compose: docker-compose {posargs}
    {docstrings,checkdocstrings}: sphinx-apidoc -ePMF -a -H "Dooccsstrinngs!!" --ext-intersphinx --ext-todo --ext-viewcode -o {envdir}/rst .
    docstrings: sphinx-autobuild -BqT -z lms -z tests -b dirhtml {envdir}/rst {envdir}/dirhtml
    checkdocstrings: sphinx-build -qTn -b dirhtml {envdir}/rst {envdir}/dirhtml
    clean: coverage erase
    pip-compile: pip-compile {posargs}
sitepackages = {env:SITE_PACKAGES:false}
