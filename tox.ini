[tox]
envlist = tests
skipsdist = true
minversion = 3.16.1
requires =
  tox-pip-extensions
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
parallel_show_output = true
skip_install = true
passenv =
    HOME
    {tests,functests,bddtests}: TEST_DATABASE_URL
    {tests,functests}: PYTEST_ADDOPTS
    dev: SESSION_COOKIE_SECRET
    dev: DATABASE_URL
    dev: DEBUG
    dev: FEATURE_FLAG_*
    dev: FEATURE_FLAGS_ALLOWED_IN_COOKIE
    dev: FEATURE_FLAGS_COOKIE_SECRET
    dev: GOOGLE_APP_ID
    dev: GOOGLE_CLIENT_ID
    dev: GOOGLE_DEVELOPER_KEY
    dev: H_AUTHORITY
    dev: H_API_URL_PRIVATE
    dev: H_API_URL_PUBLIC
    dev: H_CLIENT_ID
    dev: H_CLIENT_SECRET
    dev: H_JWT_CLIENT_ID
    dev: H_JWT_CLIENT_SECRET
    dev: HASHED_PW
    dev: JWT_SECRET
    dev: LMS_SECRET
    dev: OAUTH2_STATE_SECRET
    dev: RPC_ALLOWED_ORIGINS
    dev: SALT
    dev: SENTRY_DSN
    dev: SENTRY_ENVIRONMENT
    dev: USERNAME
    dev: VIA_URL
deps =
    dev: -e .
    dev: -r requirements/dev.txt
    {format,checkformatting}: -r requirements/format.txt
    lint: -r requirements/lint.txt
    tests: -r requirements/tests.txt
    functests: -r requirements/functests.txt
    bddtests: -r requirements/bddtests.txt
    dockercompose: -r requirements/dockercompose.txt
    pip-tools<5.0.0
setenv =
    PYTHONUNBUFFERED = 1
    tests: JWT_SECRET = test_secret
    tests: VIA_URL = https://example.com/
    tests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_test}
    functests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_functests}
    bddtests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_bddtests}
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
    VIA_SECRET = not_a_secret
whitelist_externals =
    tests,functests,bddtests: sh
commands =
    dev: {posargs:supervisord -c conf/supervisord-dev.conf}
    tests: sh bin/create-db lms_test
    functests: sh bin/create-db lms_functests
    bddtests: sh bin/create-db lms_bddtests
    tests: coverage run -m pytest -v {posargs:tests/unit/}
    tests: -coverage combine
    tests: coverage report
    functests: pytest {posargs:tests/functional/}
    bddtests: behave {posargs:tests/bdd/}
    lint: pylint lms
    lint: pylint --rcfile=tests/.pylintrc tests
    lint: pydocstyle lms tests
    lint: pycodestyle lms tests
    format: black lms tests
    format: isort --quiet --atomic lms tests
    checkformatting: black --check lms tests
    checkformatting: isort --quiet --check-only lms tests
    dockercompose: docker-compose {posargs}
sitepackages = {env:SITE_PACKAGES:false}

[testenv:dev]
# By default when you Ctrl-c the `make dev` command tox is too aggressive about
# killing supervisor. tox kills supervisor before supervisor has had time to
# stop or kill its child processes, resulting in detached child processes being
# left running and other problems.
#
# Fix this by configuring tox to wait a long time before sending any further
# SIGINTs (after the first one) or SIGTERMs or SIGKILLs to supervisor.
# Just trust supervisor to clean up all its child processes and stop.
suicide_timeout = 60.0
interrupt_timeout = 60.0
terminate_timeout = 60.0
