[tox]
envlist = tests
skipsdist = true
requires =
    tox>=3.25.0,<4
    tox-envfile
    tox-faster
    tox-run-command

[testenv]
skip_install = true
setenv =
    PYTHONUNBUFFERED = 1
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
    dev: DEV = {env:DEV:true}
    dev: SENTRY_ENVIRONMENT = {env:SENTRY_ENVIRONMENT:dev}
    dev: NEW_RELIC_APP_NAME = {env:NEW_RELIC_APP_NAME:lms}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
    SQLALCHEMY_SILENCE_UBER_WARNING=1
    dev: DATABASE_URL = {env:DATABASE_URL:postgresql://postgres@localhost:5433/postgres}
    tests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_tests}
    functests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_functests}
    # Make `import lms` work in `make shell`.
    dev: PYTHONPATH = .
    dev: WEB_CONCURRENCY = {env:WEB_CONCURRENCY:2}
    bddtests: TEST_DATABASE_URL = {env:TEST_DATABASE_URL:postgresql://postgres@localhost:5433/lms_bddtests}
    dev,functests: H_FDW_DATABASE_URL = {env:H_FDW_DATABASE_URL:postgresql://lms-fdw:password@h_postgres_1:5432/postgres}
    dev: BROKER_URL = {env:BROKER_URL:amqp://guest:guest@localhost:5674//}
    dev: FEATURE_FLAGS_COOKIE_SECRET = {env:FEATURE_FLAGS_COOKIE_SECRET:notasecret}
    dev: FEATURE_FLAGS_ALLOWED_IN_COOKIE = {env:FEATURE_FLAGS_ALLOWED_IN_COOKIE:vitalsource}
    dev: H_AUTHORITY = {env:H_AUTHORITY:lms.hypothes.is}
    dev: H_API_URL_PUBLIC = {env:H_API_URL_PUBLIC:http://localhost:5000/api/}
    dev: H_API_URL_PRIVATE = {env:H_API_URL_PRIVATE:http://localhost:5000/api/}
    dev: MAILCHIMP_DIGESTS_SUBACCOUNT = {env:MAILCHIMP_DIGESTS_SUBACCOUNT:devdata}
    dev: MAILCHIMP_DIGESTS_EMAIL = {env:MAILCHIMP_DIGESTS_EMAIL:noreply-dev-2QY7xVpN@hypothes.is}
    dev: MAILCHIMP_DIGESTS_NAME = {env:MAILCHIMP_DIGESTS_NAME:Hypothesis (Dev)}
    dev: OAUTH2_STATE_SECRET = {env:OAUTH2_STATE_SECRET:notasecret}
    dev: RPC_ALLOWED_ORIGINS = {env:RPC_ALLOWED_ORIGINS:http://localhost:5000}
    dev: VIA_URL = {env:VIA_URL:http://localhost:9083}
    dev: SESSION_COOKIE_SECRET = {env:SESSION_COOKIE_SECRET:notasecret}
    # Number of gunicorn workers: https://docs.gunicorn.org/en/stable/settings.html#worker-processes
    VIA_SECRET = not_a_secret
    FDW_USERS = {env:FDW_USERS:report-fdw}
    WEB_APP_URL=http://localhost:8001
passenv =
    HOME
    PYTEST_ADDOPTS
    dev: DEBUG
    dev: SENTRY_DSN
    dev: NEW_RELIC_LICENSE_KEY
    GUNICORN_CERTFILE
    GUNICORN_KEYFILE
    dev: FEATURE_FLAG_*
    dev: GOOGLE_CLIENT_ID
    dev: GOOGLE_DEVELOPER_KEY
    dev: ONEDRIVE_CLIENT_ID
    dev: ADMIN_AUTH_GOOGLE_CLIENT_ID
    dev: ADMIN_AUTH_GOOGLE_CLIENT_SECRET
    dev: H_CLIENT_ID
    dev: H_CLIENT_SECRET
    dev: H_JWT_CLIENT_ID
    dev: H_JWT_CLIENT_SECRET
    dev: MAILCHIMP_API_KEY
    dev: LMS_SECRET
    dev: VITALSOURCE_API_KEY
    dev: BLACKBOARD_API_CLIENT_ID
    dev: BLACKBOARD_API_CLIENT_SECRET
    dev: JSTOR_API_URL
    dev: JSTOR_API_SECRET
    dev: DISABLE_KEY_ROTATION
    dev: WEB_APP_URL
deps =
    pip-tools
    pip-sync-faster
depends =
    coverage: tests
allowlist_externals =
    tests,functests: sh
    bddtests: sh
commands_pre =
    pip-sync-faster requirements/{env:TOX_ENV_NAME}.txt --pip-args '--disable-pip-version-check'
commands =
    tests: sh bin/create-db lms_tests
    functests: sh bin/create-db lms_functests
    dev: {posargs:supervisord -c conf/supervisord-dev.conf}
    format: black lms tests bin
    format: isort --atomic lms tests bin
    checkformatting: black --check lms tests bin
    checkformatting: isort --quiet --check-only lms tests bin
    lint: pylint lms bin
    lint: pylint --rcfile=tests/pyproject.toml tests
    lint: pydocstyle lms tests bin
    lint: pycodestyle lms tests bin
    tests: coverage run -m pytest --failed-first --new-first --no-header --quiet {posargs:tests/unit/}
    functests: pytest --failed-first --new-first --no-header --quiet {posargs:tests/functional/}
    coverage: -coverage combine
    coverage: coverage report
    template: python3 bin/make_template {posargs}
    bddtests: sh bin/create-db lms_bddtests
    bddtests: behave {posargs:tests/bdd/}

[testenv:dev]
# By default when you Ctrl-c the `make dev` command tox is too aggressive about
# killing supervisor. tox kills supervisor before supervisor has had time to
# stop or kill its child processes, resulting in detached child processes being
# left running and other problems.
#
# Fix this by configuring tox to wait a long time before sending any further
# SIGINTs (after the first one) or SIGTERMs or SIGKILLs to supervisor.
# Just trust supervisor to clean up all its child processes and stop.
suicide_timeout = 60.0
interrupt_timeout = 60.0
terminate_timeout = 60.0
