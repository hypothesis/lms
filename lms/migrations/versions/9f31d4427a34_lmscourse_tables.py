"""LMSCourse table."""

import sqlalchemy as sa
from alembic import op

revision = "9f31d4427a34"
down_revision = "e13fb37c96e5"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lms_course",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tool_consumer_instance_guid", sa.UnicodeText(), nullable=True),
        sa.Column("authority_provided_id", sa.Unicode(), nullable=False),
        sa.Column("copied_from_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.UnicodeText(), nullable=False),
        sa.Column("lti_id", sa.Unicode(), nullable=False),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["copied_from_id"],
            ["grouping.id"],
            name=op.f("fk__lms_course__copied_from_id__grouping"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__lms_course")),
        sa.UniqueConstraint(
            "tool_consumer_instance_guid",
            "lti_id",
            name=op.f("uq__lms_course__tool_consumer_instance_guid"),
        ),
    )
    op.create_index(
        op.f("ix__lms_course_authority_provided_id"),
        "lms_course",
        ["authority_provided_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix__lms_course_lti_id"), "lms_course", ["lti_id"], unique=False
    )
    op.create_index(op.f("ix__lms_course_name"), "lms_course", ["name"], unique=False)
    op.create_index(
        op.f("ix__lms_course_tool_consumer_instance_guid"),
        "lms_course",
        ["tool_consumer_instance_guid"],
        unique=False,
    )
    op.create_table(
        "lms_course_application_instance",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("application_instance_id", sa.Integer(), nullable=True),
        sa.Column("lms_course_id", sa.Integer(), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["application_instance_id"],
            ["application_instances.id"],
            name=op.f(
                "fk__lms_course_application_instance__application_instance_id__application_instances"
            ),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["lms_course_id"],
            ["lms_course.id"],
            name=op.f("fk__lms_course_application_instance__lms_course_id__lms_course"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__lms_course_application_instance")),
        sa.UniqueConstraint(
            "application_instance_id",
            "lms_course_id",
            name=op.f("uq__lms_course_application_instance__application_instance_id"),
        ),
    )
    op.create_index(
        op.f("ix__lms_course_application_instance_application_instance_id"),
        "lms_course_application_instance",
        ["application_instance_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__lms_course_application_instance_lms_course_id"),
        "lms_course_application_instance",
        ["lms_course_id"],
        unique=False,
    )
    op.create_table(
        "lms_course_membership",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("lms_course_id", sa.Integer(), nullable=True),
        sa.Column("lms_user_id", sa.Integer(), nullable=True),
        sa.Column("lti_role_id", sa.Integer(), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["lms_course_id"],
            ["lms_course.id"],
            name=op.f("fk__lms_course_membership__lms_course_id__lms_course"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["lms_user_id"],
            ["lms_course.id"],
            name=op.f("fk__lms_course_membership__lms_user_id__lms_course"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["lti_role_id"],
            ["lti_role.id"],
            name=op.f("fk__lms_course_membership__lti_role_id__lti_role"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__lms_course_membership")),
        sa.UniqueConstraint(
            "lms_course_id",
            "lms_user_id",
            "lti_role_id",
            name=op.f("uq__lms_course_membership__lms_course_id"),
        ),
    )
    op.create_index(
        op.f("ix__lms_course_membership_lms_course_id"),
        "lms_course_membership",
        ["lms_course_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__lms_course_membership_lms_user_id"),
        "lms_course_membership",
        ["lms_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__lms_course_membership_lti_role_id"),
        "lms_course_membership",
        ["lti_role_id"],
        unique=False,
    )
    op.add_column("lms_user", sa.Column("name", sa.Unicode(), nullable=True))
    op.drop_index("ix__lms_user_display_name", table_name="lms_user")
    op.create_index(op.f("ix__lms_user_name"), "lms_user", ["name"], unique=False)
    op.drop_column("lms_user", "display_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "lms_user",
        sa.Column("display_name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix__lms_user_name"), table_name="lms_user")
    op.create_index(
        "ix__lms_user_display_name", "lms_user", ["display_name"], unique=False
    )
    op.drop_column("lms_user", "name")
    op.drop_index(
        op.f("ix__lms_course_membership_lti_role_id"),
        table_name="lms_course_membership",
    )
    op.drop_index(
        op.f("ix__lms_course_membership_lms_user_id"),
        table_name="lms_course_membership",
    )
    op.drop_index(
        op.f("ix__lms_course_membership_lms_course_id"),
        table_name="lms_course_membership",
    )
    op.drop_table("lms_course_membership")
    op.drop_index(
        op.f("ix__lms_course_application_instance_lms_course_id"),
        table_name="lms_course_application_instance",
    )
    op.drop_index(
        op.f("ix__lms_course_application_instance_application_instance_id"),
        table_name="lms_course_application_instance",
    )
    op.drop_table("lms_course_application_instance")
    op.drop_index(
        op.f("ix__lms_course_tool_consumer_instance_guid"), table_name="lms_course"
    )
    op.drop_index(op.f("ix__lms_course_name"), table_name="lms_course")
    op.drop_index(op.f("ix__lms_course_lti_id"), table_name="lms_course")
    op.drop_index(op.f("ix__lms_course_authority_provided_id"), table_name="lms_course")
    op.drop_table("lms_course")
    # ### end Alembic commands ###
