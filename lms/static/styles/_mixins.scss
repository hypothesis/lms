@use "variables" as var;


// Typography
// ----------
@mixin font-small {
  font-size: var.$small-font-size;
  line-height: var.$small-line-height;
  font-weight: 400;
  letter-spacing: 0.2px;
}

@mixin font-normal {
  font-size: var.$normal-font-size;
  line-height: var.$normal-line-height;
  font-weight: 400;
}

// Mobile
// ------
// Mixin for styling elements to make them more finger-friendly on touch-input
// devices.
//
// Use interaction media queries where available (see
// http://caniuse.com/#feat=css-media-interaction) or fall back to relying on a
// JS-added class on the <html> or <body> elements otherwise.
@mixin touch-input {
  @media (pointer: coarse) {
    @content;
  }
  .env-touch {
    @content;
  }
}
// Used to apply standard outline focus state styling to buttons and input fields
@mixin input-focus {
  &:focus {
    outline: 1px solid var.$grey-5;
    outline-offset: -1px;
    outline-style: solid
  }
}

// Creates a spinner style with a provided $size and $color. The spinner
// will be positioned in the center of its parent as long as that element is
// `position: relative`
@mixin spinner($size, $color: var.$grey-5) {
  position: absolute;
  width: $size;
  height: $size;
  left: calc(50% - #{$size / 2});
  top: calc(50% - #{$size / 2});
  color: $color;
}
